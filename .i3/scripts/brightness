#!/bin/bash

# Brightness control level script

EXPIRES=1500
NOTIFY="/usr/bin/notify-send -t $EXPIRES"
TITLE=Brightness
XRANDR=/usr/bin/xrandr
GREP=/bin/grep
WC=/usr/bin/wc
BC=/usr/bin/bc
CUT=/usr/bin/cut
PKILL=/usr/bin/pkill
SED=/bin/sed
STEPS=20
FUNC=$1

if [ "x$FUNC" == "x" ]; then
  echo "$0 <inc|dec|info>"
  exit 1
fi

MAX_LINES=$($XRANDR | $WC -l)

# Generates a progress bar for the provided value.
# Utility function lifted from i3-volume
#
# Arguments:
#   Percentage      (integer) Percentage of progress.
#   Maximum         (integer) Maximum percentage. (default: 100)
#   Divisor         (integer) For calculating the ratio of blocks to progress (default: 5)
#
# Returns:
#   The progress bar.
get_progress_bar() {
    local percent="$1"
    local max_percent=${2:-100}
    local divisor=${3:-4}
    local progress=$((($percent > $max_percent ? $max_percent : $percent) / $divisor))

    printf 'â–ˆ%.0s' $(eval echo "{1..$progress}")
}
# Run through all connected displays
for screenname in $($XRANDR --verbose | grep " connected" | $CUT -f1 -d" "); do
  # Get current backlight 
  BACKLIGHT=$($XRANDR --verbose | $GREP BACKLIGHT | $CUT -d ':' -f 2 | $SED 's/\s//g')
  # Get brightness ranges for the display being processed
  LIMITS=$($XRANDR --verbose | $GREP -A $MAX_LINES $screenname | $GREP -A 1 BACKLIGHT | $GREP range | $CUT -d : -f 2 | tr '()' ' ')
  LOWER_LIMIT=$(echo $LIMITS | $CUT -d , -f 1)
  UPPER_LIMIT=$(echo $LIMITS | $CUT -d , -f 2 | $SED 's/^[[:space:]]*//')
  # Calculate new brightness value
  if [ "$FUNC" == "inc" ]; then
    NEW_BACKLIGHT=$($BC <<< "scale=0; $BACKLIGHT + $UPPER_LIMIT / $STEPS")
  elif [ "$FUNC" == "dec" ]; then
    NEW_BACKLIGHT=$($BC <<< "scale=0; $BACKLIGHT - $UPPER_LIMIT / $STEPS")
  elif [ "$FUNC" == "info" ]; then
    PERCENTAGE=$($BC <<< "scale=0; 100 * $BACKLIGHT / $UPPER_LIMIT")
    echo "$PERCENTAGE%"
    exit 0
  fi
  # Wrap values around boundaries
  if (( $NEW_BACKLIGHT < 0 )); then
    NEW_BACKLIGHT=0
  elif (( $NEW_BACKLIGHT > $UPPER_LIMIT )); then
    NEW_BACKLIGHT=$UPPER_LIMIT 
  fi
  # Apply new backlight
  $XRANDR --output $screenname --set BACKLIGHT $NEW_BACKLIGHT
  # Calculate percentage
  PERCENTAGE=$($BC <<< "scale=0; 100 * $NEW_BACKLIGHT / $UPPER_LIMIT")
  PROGRESS=$(get_progress_bar "$PERCENTAGE")
  MSG="${screenname}: ${PERCENTAGE}% $PROGRESS"
  echo $MSG
  $NOTIFY $TITLE -h int:value:"$PERCENTAGE" -h string:synchronous:brightness "$MSG"
  $PKILL -RTMIN+10 i3blocks
done
